import{N as NodeProp,T as Tree,a as NodeType,I as IterMode,P as Parser,b as NodeSet,c as TreeFragment}from"./@lezer_common@1.0.2.js";import{F as Facet,g as EditorState,e as StateEffect,S as StateField,c as countColumn}from"./@codemirror_state@6.1.4.js";import{E as EditorView,V as ViewPlugin,l as logException}from"./@codemirror_view@6.6.0.js";import{t as tags,s as styleTags}from"./@lezer_highlight@1.1.3.js";var _a;const languageDataProp=new NodeProp;function defineLanguageFacet(t){return Facet.define({combine:t?e=>e.concat(t):void 0})}class Language{constructor(t,e,n=[],s=""){this.data=t,this.name=s,EditorState.prototype.hasOwnProperty("tree")||Object.defineProperty(EditorState.prototype,"tree",{get(){return syntaxTree(this)}}),this.parser=e,this.extension=[language.of(this),EditorState.languageData.of(((t,e,n)=>t.facet(languageDataFacetAt(t,e,n))))].concat(n)}isActiveAt(t,e,n=-1){return languageDataFacetAt(t,e,n)==this.data}findRegions(t){let e=t.facet(language);if((null==e?void 0:e.data)==this.data)return[{from:0,to:t.doc.length}];if(!e||!e.allowsNesting)return[];let n=[],s=(t,e)=>{if(t.prop(languageDataProp)==this.data)return void n.push({from:e,to:e+t.length});let r=t.prop(NodeProp.mounted);if(r){if(r.tree.prop(languageDataProp)==this.data){if(r.overlay)for(let t of r.overlay)n.push({from:t.from+e,to:t.to+e});else n.push({from:e,to:e+t.length});return}if(r.overlay){let t=n.length;if(s(r.tree,r.overlay[0].from+e),n.length>t)return}}for(let n=0;n<t.children.length;n++){let r=t.children[n];r instanceof Tree&&s(r,t.positions[n]+e)}};return s(syntaxTree(t),0),n}get allowsNesting(){return!0}}function languageDataFacetAt(t,e,n){let s=t.facet(language);if(!s)return null;let r=s.data;if(s.allowsNesting)for(let s=syntaxTree(t).topNode;s;s=s.enter(e,n,IterMode.ExcludeBuffers))r=s.type.prop(languageDataProp)||r;return r}function syntaxTree(t){let e=t.field(Language.state,!1);return e?e.tree:Tree.empty}Language.setState=StateEffect.define();class DocInput{constructor(t,e=t.length){this.doc=t,this.length=e,this.cursorPos=0,this.string="",this.cursor=t.iter()}syncTo(t){return this.string=this.cursor.next(t-this.cursorPos).value,this.cursorPos=t+this.string.length,this.cursorPos-this.string.length}chunk(t){return this.syncTo(t),this.string}get lineChunks(){return!0}read(t,e){let n=this.cursorPos-this.string.length;return t<n||e>=this.cursorPos?this.doc.sliceString(t,e):this.string.slice(t-n,e-n)}}let currentContext=null;class ParseContext{constructor(t,e,n=[],s,r,i,a,o){this.parser=t,this.state=e,this.fragments=n,this.tree=s,this.treeLen=r,this.viewport=i,this.skipped=a,this.scheduleOn=o,this.parse=null,this.tempSkipped=[]}static create(t,e,n){return new ParseContext(t,e,[],Tree.empty,0,n,[],null)}startParse(){return this.parser.startParse(new DocInput(this.state.doc),this.fragments)}work(t,e){return null!=e&&e>=this.state.doc.length&&(e=void 0),this.tree!=Tree.empty&&this.isDone(null!=e?e:this.state.doc.length)?(this.takeTree(),!0):this.withContext((()=>{var n;if("number"==typeof t){let e=Date.now()+t;t=()=>Date.now()>e}for(this.parse||(this.parse=this.startParse()),null!=e&&(null==this.parse.stoppedAt||this.parse.stoppedAt>e)&&e<this.state.doc.length&&this.parse.stopAt(e);;){let s=this.parse.advance();if(s){if(this.fragments=this.withoutTempSkipped(TreeFragment.addTree(s,this.fragments,null!=this.parse.stoppedAt)),this.treeLen=null!==(n=this.parse.stoppedAt)&&void 0!==n?n:this.state.doc.length,this.tree=s,this.parse=null,!(this.treeLen<(null!=e?e:this.state.doc.length)))return!0;this.parse=this.startParse()}if(t())return!1}}))}takeTree(){let t,e;this.parse&&(t=this.parse.parsedPos)>=this.treeLen&&((null==this.parse.stoppedAt||this.parse.stoppedAt>t)&&this.parse.stopAt(t),this.withContext((()=>{for(;!(e=this.parse.advance()););})),this.treeLen=t,this.tree=e,this.fragments=this.withoutTempSkipped(TreeFragment.addTree(this.tree,this.fragments,!0)),this.parse=null)}withContext(t){let e=currentContext;currentContext=this;try{return t()}finally{currentContext=e}}withoutTempSkipped(t){for(let e;e=this.tempSkipped.pop();)t=cutFragments(t,e.from,e.to);return t}changes(t,e){let{fragments:n,tree:s,treeLen:r,viewport:i,skipped:a}=this;if(this.takeTree(),!t.empty){let e=[];if(t.iterChangedRanges(((t,n,s,r)=>e.push({fromA:t,toA:n,fromB:s,toB:r}))),n=TreeFragment.applyChanges(n,e),s=Tree.empty,r=0,i={from:t.mapPos(i.from,-1),to:t.mapPos(i.to,1)},this.skipped.length){a=[];for(let e of this.skipped){let n=t.mapPos(e.from,1),s=t.mapPos(e.to,-1);n<s&&a.push({from:n,to:s})}}}return new ParseContext(this.parser,e,n,s,r,i,a,this.scheduleOn)}updateViewport(t){if(this.viewport.from==t.from&&this.viewport.to==t.to)return!1;this.viewport=t;let e=this.skipped.length;for(let e=0;e<this.skipped.length;e++){let{from:n,to:s}=this.skipped[e];n<t.to&&s>t.from&&(this.fragments=cutFragments(this.fragments,n,s),this.skipped.splice(e--,1))}return!(this.skipped.length>=e)&&(this.reset(),!0)}reset(){this.parse&&(this.takeTree(),this.parse=null)}skipUntilInView(t,e){this.skipped.push({from:t,to:e})}static getSkippingParser(t){return new class extends Parser{createParse(e,n,s){let r=s[0].from,i=s[s.length-1].to;return{parsedPos:r,advance(){let e=currentContext;if(e){for(let t of s)e.tempSkipped.push(t);t&&(e.scheduleOn=e.scheduleOn?Promise.all([e.scheduleOn,t]):t)}return this.parsedPos=i,new Tree(NodeType.none,[],[],i-r)},stoppedAt:null,stopAt(){}}}}}isDone(t){t=Math.min(t,this.state.doc.length);let e=this.fragments;return this.treeLen>=t&&e.length&&0==e[0].from&&e[0].to>=t}static get(){return currentContext}}function cutFragments(t,e,n){return TreeFragment.applyChanges(t,[{fromA:e,toA:n,fromB:e,toB:n}])}class LanguageState{constructor(t){this.context=t,this.tree=t.tree}apply(t){if(!t.docChanged&&this.tree==this.context.tree)return this;let e=this.context.changes(t.changes,t.state),n=this.context.treeLen==t.startState.doc.length?void 0:Math.max(t.changes.mapPos(this.context.treeLen),e.viewport.to);return e.work(20,n)||e.takeTree(),new LanguageState(e)}static init(t){let e=Math.min(3e3,t.doc.length),n=ParseContext.create(t.facet(language).parser,t,{from:0,to:e});return n.work(20,e)||n.takeTree(),new LanguageState(n)}}Language.state=StateField.define({create:LanguageState.init,update(t,e){for(let t of e.effects)if(t.is(Language.setState))return t.value;return e.startState.facet(language)!=e.state.facet(language)?LanguageState.init(e.state):t.apply(e)}});let requestIdle=t=>{let e=setTimeout((()=>t()),500);return()=>clearTimeout(e)};"undefined"!=typeof requestIdleCallback&&(requestIdle=t=>{let e=-1,n=setTimeout((()=>{e=requestIdleCallback(t,{timeout:400})}),100);return()=>e<0?clearTimeout(n):cancelIdleCallback(e)});const isInputPending="undefined"!=typeof navigator&&(null===(_a=navigator.scheduling)||void 0===_a?void 0:_a.isInputPending)?()=>navigator.scheduling.isInputPending():null,parseWorker=ViewPlugin.fromClass(class{constructor(t){this.view=t,this.working=null,this.workScheduled=0,this.chunkEnd=-1,this.chunkBudget=-1,this.work=this.work.bind(this),this.scheduleWork()}update(t){let e=this.view.state.field(Language.state).context;(e.updateViewport(t.view.viewport)||this.view.viewport.to>e.treeLen)&&this.scheduleWork(),t.docChanged&&(this.view.hasFocus&&(this.chunkBudget+=50),this.scheduleWork()),this.checkAsyncSchedule(e)}scheduleWork(){if(this.working)return;let{state:t}=this.view,e=t.field(Language.state);e.tree==e.context.tree&&e.context.isDone(t.doc.length)||(this.working=requestIdle(this.work))}work(t){this.working=null;let e=Date.now();if(this.chunkEnd<e&&(this.chunkEnd<0||this.view.hasFocus)&&(this.chunkEnd=e+3e4,this.chunkBudget=3e3),this.chunkBudget<=0)return;let{state:n,viewport:{to:s}}=this.view,r=n.field(Language.state);if(r.tree==r.context.tree&&r.context.isDone(s+1e5))return;let i=Date.now()+Math.min(this.chunkBudget,100,t&&!isInputPending?Math.max(25,t.timeRemaining()-5):1e9),a=r.context.treeLen<s&&n.doc.length>s+1e3,o=r.context.work((()=>isInputPending&&isInputPending()||Date.now()>i),s+(a?0:1e5));this.chunkBudget-=Date.now()-e,(o||this.chunkBudget<=0)&&(r.context.takeTree(),this.view.dispatch({effects:Language.setState.of(new LanguageState(r.context))})),this.chunkBudget>0&&(!o||a)&&this.scheduleWork(),this.checkAsyncSchedule(r.context)}checkAsyncSchedule(t){t.scheduleOn&&(this.workScheduled++,t.scheduleOn.then((()=>this.scheduleWork())).catch((t=>logException(this.view.state,t))).then((()=>this.workScheduled--)),t.scheduleOn=null)}destroy(){this.working&&this.working()}isWorking(){return!!(this.working||this.workScheduled>0)}},{eventHandlers:{focus(){this.scheduleWork()}}}),language=Facet.define({combine:t=>t.length?t[0]:null,enables:t=>[Language.state,parseWorker,EditorView.contentAttributes.compute([t],(e=>{let n=e.facet(t);return n&&n.name?{"data-language":n.name}:{}}))]}),indentService=Facet.define(),indentUnit=Facet.define({combine:t=>{if(!t.length)return"  ";if(!/^(?: +|\t+)$/.test(t[0]))throw new Error("Invalid indent unit: "+JSON.stringify(t[0]));return t[0]}});function getIndentUnit(t){let e=t.facet(indentUnit);return 9==e.charCodeAt(0)?t.tabSize*e.length:e.length}function indentString(t,e){let n="",s=t.tabSize;if(9==t.facet(indentUnit).charCodeAt(0))for(;e>=s;)n+="\t",e-=s;for(let t=0;t<e;t++)n+=" ";return n}function getIndentation(t,e){t instanceof EditorState&&(t=new IndentContext(t));for(let n of t.state.facet(indentService)){let s=n(t,e);if(void 0!==s)return s}let n=syntaxTree(t.state);return n?syntaxIndentation(t,n,e):null}class IndentContext{constructor(t,e={}){this.state=t,this.options=e,this.unit=getIndentUnit(t)}lineAt(t,e=1){let n=this.state.doc.lineAt(t),{simulateBreak:s,simulateDoubleBreak:r}=this.options;return null!=s&&s>=n.from&&s<=n.to?r&&s==t?{text:"",from:t}:(e<0?s<t:s<=t)?{text:n.text.slice(s-n.from),from:s}:{text:n.text.slice(0,s-n.from),from:n.from}:n}textAfterPos(t,e=1){if(this.options.simulateDoubleBreak&&t==this.options.simulateBreak)return"";let{text:n,from:s}=this.lineAt(t,e);return n.slice(t-s,Math.min(n.length,t+100-s))}column(t,e=1){let{text:n,from:s}=this.lineAt(t,e),r=this.countColumn(n,t-s),i=this.options.overrideIndentation?this.options.overrideIndentation(s):-1;return i>-1&&(r+=i-this.countColumn(n,n.search(/\S|$/))),r}countColumn(t,e=t.length){return countColumn(t,this.state.tabSize,e)}lineIndent(t,e=1){let{text:n,from:s}=this.lineAt(t,e),r=this.options.overrideIndentation;if(r){let t=r(s);if(t>-1)return t}return this.countColumn(n,n.search(/\S|$/))}get simulatedBreak(){return this.options.simulateBreak||null}}const indentNodeProp=new NodeProp;function syntaxIndentation(t,e,n){return indentFrom(e.resolveInner(n).enterUnfinishedNodesBefore(n),n,t)}function ignoreClosed(t){return t.pos==t.options.simulateBreak&&t.options.simulateDoubleBreak}function indentStrategy(t){let e=t.type.prop(indentNodeProp);if(e)return e;let n,s=t.firstChild;if(s&&(n=s.type.prop(NodeProp.closedBy))){let e=t.lastChild,s=e&&n.indexOf(e.name)>-1;return t=>delimitedStrategy(t,!0,1,void 0,s&&!ignoreClosed(t)?e.from:void 0)}return null==t.parent?topIndent:null}function indentFrom(t,e,n){for(;t;t=t.parent){let s=indentStrategy(t);if(s)return s(TreeIndentContext.create(n,e,t))}return null}function topIndent(){return 0}class TreeIndentContext extends IndentContext{constructor(t,e,n){super(t.state,t.options),this.base=t,this.pos=e,this.node=n}static create(t,e,n){return new TreeIndentContext(t,e,n)}get textAfter(){return this.textAfterPos(this.pos)}get baseIndent(){let t=this.state.doc.lineAt(this.node.from);for(;;){let e=this.node.resolve(t.from);for(;e.parent&&e.parent.from==e.from;)e=e.parent;if(isParent(e,this.node))break;t=this.state.doc.lineAt(e.from)}return this.lineIndent(t.from)}continue(){let t=this.node.parent;return t?indentFrom(t,this.pos,this.base):0}}function isParent(t,e){for(let n=e;n;n=n.parent)if(t==n)return!0;return!1}function bracketedAligned(t){let e=t.node,n=e.childAfter(e.from),s=e.lastChild;if(!n)return null;let r=t.options.simulateBreak,i=t.state.doc.lineAt(n.from),a=null==r||r<=i.from?i.to:Math.min(i.to,r);for(let t=n.to;;){let r=e.childAfter(t);if(!r||r==s)return null;if(!r.type.isSkipped)return r.from<a?n:null;t=r.to}}function delimitedStrategy(t,e,n,s,r){let i=t.textAfter,a=i.match(/^\s*/)[0].length,o=s&&i.slice(a,a+s.length)==s||r==t.pos+a,h=e?bracketedAligned(t):null;return h?o?t.column(h.from):t.column(h.to):t.baseIndent+(o?0:t.unit*n)}const DefaultScanDist=1e4,DefaultBrackets="()[]{}";function matchingNodes(t,e,n){let s=t.prop(e<0?NodeProp.openedBy:NodeProp.closedBy);if(s)return s;if(1==t.name.length){let s=n.indexOf(t.name);if(s>-1&&s%2==(e<0?1:0))return[n[s+e]]}return null}function matchBrackets(t,e,n,s={}){let r=s.maxScanDistance||1e4,i=s.brackets||"()[]{}",a=syntaxTree(t),o=a.resolveInner(e,n);for(let s=o;s;s=s.parent){let r=matchingNodes(s.type,n,i);if(r&&s.from<s.to)return matchMarkedBrackets(t,e,n,s,r,i)}return matchPlainBrackets(t,e,n,a,o.type,r,i)}function matchMarkedBrackets(t,e,n,s,r,i){let a=s.parent,o={from:s.from,to:s.to},h=0,l=null==a?void 0:a.cursor();if(l&&(n<0?l.childBefore(s.from):l.childAfter(s.to)))do{if(n<0?l.to<=s.from:l.from>=s.to){if(0==h&&r.indexOf(l.type.name)>-1&&l.from<l.to)return{start:o,end:{from:l.from,to:l.to},matched:!0};if(matchingNodes(l.type,n,i))h++;else if(matchingNodes(l.type,-n,i)){if(0==h)return{start:o,end:l.from==l.to?void 0:{from:l.from,to:l.to},matched:!1};h--}}}while(n<0?l.prevSibling():l.nextSibling());return{start:o,matched:!1}}function matchPlainBrackets(t,e,n,s,r,i,a){let o=n<0?t.sliceDoc(e-1,e):t.sliceDoc(e,e+1),h=a.indexOf(o);if(h<0||h%2==0!=n>0)return null;let l={from:n<0?e-1:e,to:n>0?e+1:e},u=t.doc.iterRange(e,n>0?t.doc.length:0),d=0;for(let t=0;!u.next().done&&t<=i;){let i=u.value;n<0&&(t+=i.length);let o=e+t*n;for(let t=n>0?0:i.length-1,e=n>0?i.length:-1;t!=e;t+=n){let e=a.indexOf(i[t]);if(!(e<0||s.resolveInner(o+t,1).type!=r))if(e%2==0==n>0)d++;else{if(1==d)return{start:l,end:{from:o+t,to:o+t+1},matched:e>>1==h>>1};d--}}n>0&&(t+=i.length)}return u.done?{start:l,matched:!1}:null}function countCol(t,e,n,s=0,r=0){null==e&&-1==(e=t.search(/[^\s\u00a0]/))&&(e=t.length);let i=r;for(let r=s;r<e;r++)9==t.charCodeAt(r)?i+=n-i%n:i++;return i}class StringStream{constructor(t,e,n){this.string=t,this.tabSize=e,this.indentUnit=n,this.pos=0,this.start=0,this.lastColumnPos=0,this.lastColumnValue=0}eol(){return this.pos>=this.string.length}sol(){return 0==this.pos}peek(){return this.string.charAt(this.pos)||void 0}next(){if(this.pos<this.string.length)return this.string.charAt(this.pos++)}eat(t){let e,n=this.string.charAt(this.pos);if(e="string"==typeof t?n==t:n&&(t instanceof RegExp?t.test(n):t(n)),e)return++this.pos,n}eatWhile(t){let e=this.pos;for(;this.eat(t););return this.pos>e}eatSpace(){let t=this.pos;for(;/[\s\u00a0]/.test(this.string.charAt(this.pos));)++this.pos;return this.pos>t}skipToEnd(){this.pos=this.string.length}skipTo(t){let e=this.string.indexOf(t,this.pos);if(e>-1)return this.pos=e,!0}backUp(t){this.pos-=t}column(){return this.lastColumnPos<this.start&&(this.lastColumnValue=countCol(this.string,this.start,this.tabSize,this.lastColumnPos,this.lastColumnValue),this.lastColumnPos=this.start),this.lastColumnValue}indentation(){return countCol(this.string,null,this.tabSize)}match(t,e,n){if("string"==typeof t){let s=t=>n?t.toLowerCase():t;return s(this.string.substr(this.pos,t.length))==s(t)?(!1!==e&&(this.pos+=t.length),!0):null}{let n=this.string.slice(this.pos).match(t);return n&&n.index>0?null:(n&&!1!==e&&(this.pos+=n[0].length),n)}}current(){return this.string.slice(this.start,this.pos)}}function fullParser(t){return{name:t.name||"",token:t.token,blankLine:t.blankLine||(()=>{}),startState:t.startState||(()=>!0),copyState:t.copyState||defaultCopyState,indent:t.indent||(()=>null),languageData:t.languageData||{},tokenTable:t.tokenTable||noTokens}}function defaultCopyState(t){if("object"!=typeof t)return t;let e={};for(let n in t){let s=t[n];e[n]=s instanceof Array?s.slice():s}return e}class StreamLanguage extends Language{constructor(t){let e,n=defineLanguageFacet(t.languageData),s=fullParser(t);super(n,new class extends Parser{createParse(t,n,s){return new Parse(e,t,n,s)}},[indentService.of(((t,e)=>this.getIndent(t,e)))],t.name),this.topNode=docID(n),e=this,this.streamParser=s,this.stateAfter=new NodeProp({perNode:!0}),this.tokenTable=t.tokenTable?new TokenTable(s.tokenTable):defaultTokenTable}static define(t){return new StreamLanguage(t)}getIndent(t,e){let n=syntaxTree(t.state),s=n.resolve(e);for(;s&&s.type!=this.topNode;)s=s.parent;if(!s)return null;let r,i,a=findState(this,n,0,s.from,e);if(a?(i=a.state,r=a.pos+1):(i=this.streamParser.startState(t.unit),r=0),e-r>1e4)return null;for(;r<e;){let n=t.state.doc.lineAt(r),s=Math.min(e,n.to);if(n.length){let e=new StringStream(n.text,t.state.tabSize,t.unit);for(;e.pos<s-n.from;)readToken(this.streamParser.token,e,i)}else this.streamParser.blankLine(i,t.unit);if(s==e)break;r=n.to+1}let{text:o}=t.lineAt(e);return this.streamParser.indent(i,/^\s*(.*)/.exec(o)[1],t)}get allowsNesting(){return!1}}function findState(t,e,n,s,r){let i=n>=s&&n+e.length<=r&&e.prop(t.stateAfter);if(i)return{state:t.streamParser.copyState(i),pos:n+e.length};for(let i=e.children.length-1;i>=0;i--){let a=e.children[i],o=n+e.positions[i],h=a instanceof Tree&&o<r&&findState(t,a,o,s,r);if(h)return h}return null}function cutTree(t,e,n,s,r){if(r&&n<=0&&s>=e.length)return e;r||e.type!=t.topNode||(r=!0);for(let i=e.children.length-1;i>=0;i--){let a,o=e.positions[i],h=e.children[i];if(o<s&&h instanceof Tree){if(!(a=cutTree(t,h,n-o,s-o,r)))break;return r?new Tree(e.type,e.children.slice(0,i).concat(a),e.positions.slice(0,i+1),o+a.length):a}}return null}function findStartInFragments(t,e,n,s){for(let s of e){let e,r=s.from+(s.openStart?25:0),i=s.to-(s.openEnd?25:0),a=r<=n&&i>n&&findState(t,s.tree,0-s.offset,n,i);if(a&&(e=cutTree(t,s.tree,n+s.offset,a.pos+s.offset,!1)))return{state:a.state,tree:e}}return{state:t.streamParser.startState(s?getIndentUnit(s):4),tree:Tree.empty}}class Parse{constructor(t,e,n,s){this.lang=t,this.input=e,this.fragments=n,this.ranges=s,this.stoppedAt=null,this.chunks=[],this.chunkPos=[],this.chunk=[],this.chunkReused=void 0,this.rangeIndex=0,this.to=s[s.length-1].to;let r=ParseContext.get(),i=s[0].from,{state:a,tree:o}=findStartInFragments(t,n,i,null==r?void 0:r.state);this.state=a,this.parsedPos=this.chunkStart=i+o.length;for(let t=0;t<o.children.length;t++)this.chunks.push(o.children[t]),this.chunkPos.push(o.positions[t]);r&&this.parsedPos<r.viewport.from-1e5&&(this.state=this.lang.streamParser.startState(getIndentUnit(r.state)),r.skipUntilInView(this.parsedPos,r.viewport.from),this.parsedPos=r.viewport.from),this.moveRangeIndex()}advance(){let t=ParseContext.get(),e=null==this.stoppedAt?this.to:Math.min(this.to,this.stoppedAt),n=Math.min(e,this.chunkStart+2048);for(t&&(n=Math.min(n,t.viewport.to));this.parsedPos<n;)this.parseLine(t);return this.chunkStart<this.parsedPos&&this.finishChunk(),this.parsedPos>=e?this.finish():t&&this.parsedPos>=t.viewport.to?(t.skipUntilInView(this.parsedPos,e),this.finish()):null}stopAt(t){this.stoppedAt=t}lineAfter(t){let e=this.input.chunk(t);if(this.input.lineChunks)"\n"==e&&(e="");else{let t=e.indexOf("\n");t>-1&&(e=e.slice(0,t))}return t+e.length<=this.to?e:e.slice(0,this.to-t)}nextLine(){let t=this.parsedPos,e=this.lineAfter(t),n=t+e.length;for(let t=this.rangeIndex;;){let s=this.ranges[t].to;if(s>=n)break;if(e=e.slice(0,s-(n-e.length)),t++,t==this.ranges.length)break;let r=this.ranges[t].from,i=this.lineAfter(r);e+=i,n=r+i.length}return{line:e,end:n}}skipGapsTo(t,e,n){for(;;){let s=this.ranges[this.rangeIndex].to,r=t+e;if(n>0?s>r:s>=r)break;e+=this.ranges[++this.rangeIndex].from-s}return e}moveRangeIndex(){for(;this.ranges[this.rangeIndex].to<this.parsedPos;)this.rangeIndex++}emitToken(t,e,n,s,r){if(this.ranges.length>1){e+=r=this.skipGapsTo(e,r,1);let t=this.chunk.length;n+=r=this.skipGapsTo(n,r,-1),s+=this.chunk.length-t}return this.chunk.push(t,e,n,s),r}parseLine(t){let{line:e,end:n}=this.nextLine(),s=0,{streamParser:r}=this.lang,i=new StringStream(e,t?t.state.tabSize:4,t?getIndentUnit(t.state):2);if(i.eol())r.blankLine(this.state,i.indentUnit);else for(;!i.eol();){let t=readToken(r.token,i,this.state);if(t&&(s=this.emitToken(this.lang.tokenTable.resolve(t),this.parsedPos+i.start,this.parsedPos+i.pos,4,s)),i.start>1e4)break}this.parsedPos=n,this.moveRangeIndex(),this.parsedPos<this.to&&this.parsedPos++}finishChunk(){let t=Tree.build({buffer:this.chunk,start:this.chunkStart,length:this.parsedPos-this.chunkStart,nodeSet:nodeSet,topID:0,maxBufferLength:2048,reused:this.chunkReused});t=new Tree(t.type,t.children,t.positions,t.length,[[this.lang.stateAfter,this.lang.streamParser.copyState(this.state)]]),this.chunks.push(t),this.chunkPos.push(this.chunkStart-this.ranges[0].from),this.chunk=[],this.chunkReused=void 0,this.chunkStart=this.parsedPos}finish(){return new Tree(this.lang.topNode,this.chunks,this.chunkPos,this.parsedPos-this.ranges[0].from).balance()}}function readToken(t,e,n){e.start=e.pos;for(let s=0;s<10;s++){let s=t(e,n);if(e.pos>e.start)return s}throw new Error("Stream parser failed to advance stream.")}const noTokens=Object.create(null),typeArray=[NodeType.none],nodeSet=new NodeSet(typeArray),warned=[],defaultTable=Object.create(null);for(let[t,e]of[["variable","variableName"],["variable-2","variableName.special"],["string-2","string.special"],["def","variableName.definition"],["tag","tagName"],["attribute","attributeName"],["type","typeName"],["builtin","variableName.standard"],["qualifier","modifier"],["error","invalid"],["header","heading"],["property","propertyName"]])defaultTable[t]=createTokenType(noTokens,e);class TokenTable{constructor(t){this.extra=t,this.table=Object.assign(Object.create(null),defaultTable)}resolve(t){return t?this.table[t]||(this.table[t]=createTokenType(this.extra,t)):0}}const defaultTokenTable=new TokenTable(noTokens);function warnForPart(t,e){warned.indexOf(t)>-1||(warned.push(t),console.warn(e))}function createTokenType(t,e){let n=null;for(let s of e.split(".")){let e=t[s]||tags[s];e?"function"==typeof e?n?n=e(n):warnForPart(s,`Modifier ${s} used at start of tag`):n?warnForPart(s,`Tag ${s} used as modifier`):n=e:warnForPart(s,`Unknown highlighting tag ${s}`)}if(!n)return 0;let s=e.replace(/ /g,"_"),r=NodeType.define({id:typeArray.length,name:s,props:[styleTags({[s]:n})]});return typeArray.push(r),r.id}function docID(t){let e=NodeType.define({id:typeArray.length,name:"Document",props:[languageDataProp.add((()=>t))]});return typeArray.push(e),e}export{IndentContext as I,StreamLanguage as S,indentUnit as a,getIndentUnit as b,getIndentation as g,indentString as i,matchBrackets as m,syntaxTree as s};